STRATEGIC DEPENDENCY RESOLUTION - ATTEMPT {{attempt}}/{{maxAttempts}}

ORIGINAL PACKAGE.JSON DEPENDENCIES CONTEXT IS GIVEN PREVIOUS MESSAGE.

TARGET UPGRADES USER WANTS TO DO: {{targetPackages}}

ERROR MESSAGE WHILE INSTALLING DEPENDENCIES USING `npm install`:
{{errorMessage}}

AVAILABLE VERSIONS FOR CONFLICTING PACKAGES:
{{#each packagesVersionData}}
   - {{@key}}: {{this}}
{{/each}}

## CONFLICT RESOLUTION STRATEGY

**PRIMARY GOAL**: Upgrade the ecosystem to the target packages while resolving all dependency conflicts.

**RESOLUTION PRIORITIES** (in order):
1. **PRIORITIZE TARGET PACKAGES**: Always prefer upgrading target packages to their highest compatible versions
2. **UPGRADE DEPENDENCIES**: For conflicting dependencies, choose the HIGHEST available version that resolves conflicts
3. **MAINTAIN COMPATIBILITY**: Ensure all selected versions are mutually compatible
4. **MINIMIZE DOWNGRADES**: Avoid downgrading packages unless absolutely necessary for conflict resolution

**DECISION RULES**:
- For TARGET packages: Use the highest available version that doesn't conflict with other dependencies
- For DEPENDENCY packages: Select versions that support the target packages' requirements
- When multiple versions satisfy constraints: Choose the HIGHEST version (prefer newer over older)
- If NO suitable version exists: Set to `<NULL>` with clear reasoning

**EXAMPLE SCENARIOS**:
- Target: packageA@3.0.0, Conflict: packageB needs packageA@^2.0.0 → Find packageB version compatible with packageA@3.0.0
- If packageB has no version supporting packageA@3.0.0 → Set packageB to `<NULL>` and explain why

**NULL VERSION EXAMPLE FOR SUGGESTION**:
```json
{
  "name": "incompatible-package",
  "version": "<NULL>",
  "isDev": true/false,
  "reason": "No available version compatible with target package upgrades. All versions conflict with upgraded dependencies.",
  "fromVersion": "current-version"
}
```

**RESPONSE FORMAT**:
Respond with JSON containing strategic upgrade suggestions following this exact structure:

```json
{
  "suggestions": [
    {
      "name": "package-name",
      "version": "suggested-version-or-NULL",
      "isDev": true/false,
      "reason": "Clear explanation: why this version was chosen, what conflicts it resolves, how it supports target package upgrades",
      "fromVersion": "current-version"
    }
  ],
  "analysis": "Comprehensive analysis including: (1) Summary of conflicts identified, (2) Strategy used to prioritize target package upgrades, (3) Trade-offs made, (4) Expected outcome after applying suggestions",
}
